services:
  postgres:
    image: pgvector/pgvector:pg15
    container_name: instagram_postgres
    environment:
      POSTGRES_DB: instagram_db
      POSTGRES_USER: lun1z
      POSTGRES_PASSWORD: 3b3e3tzp8e
      POSTGRES_HOST_AUTH_METHOD: trust
      POSTGRES_INITDB_ARGS: "--auth-host=trust --auth-local=trust"
      LOGS_LEVEL_POSTGRES: ${LOGS_LEVEL_POSTGRES:-INFO}
    ports:
      - "59731:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - instagram_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U lun1z -d instagram_db"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command:
      - postgres
      - -c
      - log_destination=stderr
      - -c
      - logging_collector=off
      - -c
      - log_line_prefix=%m | %p | postgres | 
      - -c
      - log_min_messages=${LOGS_LEVEL_POSTGRES:-INFO}
      - -c
      - log_min_error_statement=ERROR
      - -c
      - log_connections=off
      - -c
      - log_disconnections=off

  redis:
    image: redis:7-alpine
    container_name: instagram_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./config/redis/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ./config/redis/entrypoint.sh:/docker-entrypoint.d/10-custom-entrypoint.sh:ro
    networks:
      - instagram_network
    environment:
      - LOGS_LEVEL=${LOGS_LEVEL:-INFO}
      - LOGS_LEVEL_REDIS=${LOGS_LEVEL_REDIS:-}
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3
    command: ["sh", "-c", "sh /docker-entrypoint.d/10-custom-entrypoint.sh"]

  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: instagram_api
    ports:
      - "127.0.0.1:${PORT:-4291}:${PORT:-4291}"
    volumes:
      - ../src:/app/src
      - conversations_data:/app/src/conversations
    environment:
      - PORT=${PORT:-4291}
      - LOGS_LEVEL=${LOGS_LEVEL:-INFO}
      - LOGS_LEVEL_CELERY=${LOGS_LEVEL_CELERY:-}
      - LOGS_LEVEL_REDIS=${LOGS_LEVEL_REDIS:-}
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - TOKEN=${TOKEN}
      - INSTA_TOKEN=${INSTA_TOKEN}
      - INSTAGRAM_API_VERSION=${INSTAGRAM_API_VERSION:-v23.0}
      - APP_SECRET=${APP_SECRET:-default_app_secret}
      - DOCS_USERNAME=${DOCS_USERNAME}
      - DOCS_PASSWORD=${DOCS_PASSWORD}
      - TG_TOKEN=${TG_TOKEN}
      - TG_CHAT_ID=${TG_CHAT_ID}
      - TG_CHAT_ALERTS_THREAD_ID=${TG_CHAT_ALERTS_THREAD_ID}
      - TG_CHAT_LOGS_THREAD_ID=${TG_CHAT_LOGS_THREAD_ID}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - instagram_network
    command: sh -c "cd /app && alembic -c database/alembic.ini upgrade head && cd /app/src && uvicorn main:app --host 0.0.0.0 --port $PORT --reload"
    security_opt:
      - no-new-privileges:true

  celery_worker:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: instagram_celery_worker
    volumes:
      - ../src:/app/src
      - conversations_data:/app/src/conversations
    environment:
      - LOGS_LEVEL=${LOGS_LEVEL:-INFO}
      - LOGS_LEVEL_CELERY=${LOGS_LEVEL_CELERY:-}
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - INSTA_TOKEN=${INSTA_TOKEN}
      - INSTAGRAM_API_VERSION=${INSTAGRAM_API_VERSION:-v23.0}
      - APP_SECRET=${APP_SECRET:-default_app_secret}
      - TG_TOKEN=${TG_TOKEN}
      - TG_CHAT_ID=${TG_CHAT_ID}
      - TG_CHAT_ALERTS_THREAD_ID=${TG_CHAT_ALERTS_THREAD_ID}
      - TG_CHAT_LOGS_THREAD_ID=${TG_CHAT_LOGS_THREAD_ID}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - instagram_network
    command: sh -c "cd /app/src && python -c 'import celery_worker' && celery -A celery_worker worker --loglevel=${LOGS_LEVEL_CELERY:-${LOGS_LEVEL:-INFO}} --concurrency=4 --without-gossip --without-mingle --without-heartbeat -Q llm_queue,instagram_queue"
    security_opt:
      - no-new-privileges:true

  celery_beat:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    container_name: instagram_celery_beat
    volumes:
      - ../src:/app/src
      - conversations_data:/app/src/conversations
      - celerybeat_schedule:/app/celerybeat
    environment:
      - LOGS_LEVEL=${LOGS_LEVEL:-INFO}
      - LOGS_LEVEL_CELERY=${LOGS_LEVEL_CELERY:-}
      - DATABASE_URL=${DATABASE_URL}
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - INSTA_TOKEN=${INSTA_TOKEN}
      - INSTAGRAM_API_VERSION=${INSTAGRAM_API_VERSION:-v23.0}
      - APP_SECRET=${APP_SECRET:-default_app_secret}
      - TG_TOKEN=${TG_TOKEN}
      - TG_CHAT_ID=${TG_CHAT_ID} 
      - TG_CHAT_ALERTS_THREAD_ID=${TG_CHAT_ALERTS_THREAD_ID}
      - TG_CHAT_LOGS_THREAD_ID=${TG_CHAT_LOGS_THREAD_ID}  
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - instagram_network
    command: sh -c "mkdir -p /app/celerybeat && cd /app/src && celery -A celery_worker beat --loglevel=${LOGS_LEVEL_CELERY:-${LOGS_LEVEL:-INFO}} -s /app/celerybeat/celerybeat-schedule"
    security_opt:
      - no-new-privileges:true

  dozzle:
    image: amir20/dozzle:latest
    container_name: instagram_dozzle
    ports:
      - "57928:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./config/dozzle/users.yml:/data/users.yml:ro
    networks:
      - instagram_network
    environment:
      - DOZZLE_NO_ANALYTICS=true
      - DOZZLE_AUTH_PROVIDER=simple
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  conversations_data:
    driver: local
  celerybeat_schedule:
    driver: local

networks:
  instagram_network:
    driver: bridge  
    