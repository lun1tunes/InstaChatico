[pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths
testpaths = tests
pythonpath = src

# Async support
asyncio_mode = auto
asyncio_default_fixture_loop_scope = function

# Output options
addopts =
    -v
    -ra
    --strict-markers
    --strict-config
    --tb=short
    --showlocals
    --cov=src
    --cov-report=term-missing:skip-covered
    --cov-report=html
    --cov-report=xml
    --cov-fail-under=95
    -W default

# Markers
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (slower, require services)
    api: API endpoint tests
    repository: Repository layer tests
    service: Service layer tests
    use_case: Use case layer tests
    agent: Agent and tool tests
    task: Celery task tests
    slow: Slow tests (can be skipped for quick runs)
    requires_redis: Tests that need Redis
    requires_postgres: Tests that need PostgreSQL
    requires_openai: Tests that need OpenAI API

# Ignore patterns
norecursedirs = .git .tox dist build *.egg venv database migrations __pycache__

# Warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::PendingDeprecationWarning
