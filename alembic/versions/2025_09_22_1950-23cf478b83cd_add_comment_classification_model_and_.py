"""add comment classification model and update instagram_commen

Revision ID: 23cf478b83cd
Revises: 9664768bd8eb
Create Date: 2025-09-22 19:50:57.847379

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql


# revision identifiers, used by Alembic.
revision: str = '23cf478b83cd'
down_revision: Union[str, Sequence[str], None] = '9664768bd8eb'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    # Create the enum type first
    processingstatus_enum = postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'RETRY', name='processingstatus')
    processingstatus_enum.create(op.get_bind())
    
    op.create_table('comments_classification',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('comment_id', sa.String(), nullable=False),
        sa.Column('processing_status', postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'RETRY', name='processingstatus', create_type=False), nullable=False),
    sa.Column('processing_started_at', sa.DateTime(), nullable=True),
    sa.Column('processing_completed_at', sa.DateTime(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=False),
    sa.Column('max_retries', sa.Integer(), nullable=False),
    sa.Column('last_error', sa.Text(), nullable=True),
    sa.Column('classification', sa.String(length=20), nullable=True),
    sa.Column('confidence', sa.Integer(), nullable=True),
    sa.Column('llm_raw_response', sa.Text(), nullable=True),
    sa.Column('meta_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['comment_id'], ['instagram_comments.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_comments_classification_comment_id'), 'comments_classification', ['comment_id'], unique=True)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_comments_classification_comment_id'), table_name='comments_classification')
    op.drop_table('comments_classification')
    # Drop the enum type
    processingstatus_enum = postgresql.ENUM('PENDING', 'PROCESSING', 'COMPLETED', 'FAILED', 'RETRY', name='processingstatus')
    processingstatus_enum.drop(op.get_bind())
    # ### end Alembic commands ###
