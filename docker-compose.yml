version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: instagram_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-instagram_db}
      POSTGRES_USER: ${POSTGRES_USER:-instagram_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-instagram_password}
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - instagram_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-instagram_user} -d ${POSTGRES_DB:-instagram_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s

  redis:
    image: redis:7-alpine
    container_name: instagram_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - instagram_network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  api:
    build: .
    container_name: instagram_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql+asyncpg://instagram_user:instagram_password@postgres:5432/instagram_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - instagram_network
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  celery_worker:
    build: .
    container_name: instagram_celery_worker
    environment:
      - DATABASE_URL=postgresql+asyncpg://instagram_user:instagram_password@postgres:5432/instagram_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - instagram_network
    command: celery -A core.celery_app worker --loglevel=info --concurrency=4 -Q llm_queue

  celery_beat:
    build: .
    container_name: instagram_celery_beat
    environment:
      - DATABASE_URL=postgresql+asyncpg://instagram_user:instagram_password@postgres:5432/instagram_db
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - instagram_network
    command: celery -A core.celery_app beat --loglevel=info

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local

networks:
  instagram_network:
    driver: bridge